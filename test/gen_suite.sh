#!/usr/bin/bash

mkdir -p suite

unsupported=("to_this" 
	"assign_to_closure"
	"assign_to_shadowed_later"
	"evaluate"
	"parse"
	"closure_in_body"
	"recursion"
	"local_recursion"
	"mutual_recursion"
	"close_over_function_parameter"
	"identifiers"
	"strings"
	"use_false_as_var"
	"use_nil_as_var"
	"use_this_as_var"
	"whitespace"
	"numbers"
	"punctuators"
	"leading_dot"
	"trailing_dot"
	"loop_too_large"
	"fun_in_then"
	"var_in_else"
	"var_in_then"
	"instantiation"
	"binary_trees"
	"invocation"
	"method_call"
	"properties"
	"trees"
	"zoo"
	"zoo_batch"
	"string"
	"nil"
	"num"
	"object"
	"bool"
	"inherit_self"
	"reference_self"
	"empty"
	"local_inherit_self"
	"inherited_method"
	"local_reference_self"
	"local_inherit_other"
	"close_over_method_parameter"
	"arguments"
	"call_init_explicitly"
	"default_arguments"
	"extra_arguments"
	"early_return"
	"call_init_early_return"
	"default"
	"missing_arguments"
	"return_in_nested_function"
	"init_not_method"
	"return_value"
	"call_function_field"
	"call_nonfunction_field"
	"get_on_bool"
	"get_on_function"
	"get_on_nil"
	"get_on_class"
	"get_on_string"
	"get_on_num"
	"get_and_set_method"
	"method"
	"method_binds_this"
	"many"
	"on_instance"
	"set_on_class"
	"set_on_bool"
	"set_on_function"
	"set_on_nil"
	"set_on_string"
	"set_on_num"
	"set_evaluation_order"
	"undefined"
	"class_in_body"
	"class_in_else"
	"class_in_then"
	"inherit_from_number"
	"parenthesized_superclass"
	"constructor"
	"inherit_methods"
	"inherit_from_nil"
	"set_fields_from_base_class"
	"inherit_from_function"
	"empty_block"
	"fun_in_body"
	"for_scope"
	"statement_condition"
	"statement_increment"
	"statement_initializer"
	"var_in_body"
	"missing_comma_in_parameters"
	"body_must_be_block"
	"arity"
	"not_found"
	"extra_arguments"
	"refer_to_name"
	"print_bound_method"
	"missing_arguments"
	"too_many_parameters"
	"equals_class"
	"equals_method"
	"not_class"
	"394"
	"in_method"
	"keywords"
	"bound_method"
	"extra_arguments"
	"constructor"
	"indirectly_inherited"
	"closure"
	"call_same_method"
	"call_other_method"
	"no_superclass_bind"
	"no_superclass_method"
	"missing_arguments"
	"super_at_top_level"
	"no_superclass_call"
	"parenthesized"
	"reassign_superclass"
	"super_in_closure_in_inherited_method"
	"super_in_inherited_method"
	"super_in_top_level_function"
	"super_without_dot"
	"this_in_superclass_method"
	"super_without_name"
	"closure"
	"nested_class"
	"nested_closure"
	"this_at_top_level"
	"this_in_method"
	"this_in_top_level_function"
	"local_from_method"
	"class_in_body"
	"too_many_arguments"
	"fun_in_else"
)

while read -r file; do 
	suite="$(dirname $file)"
	[ "$suite" = "benchmark" ] && continue  # Skip benchmarks
	[ "$suite" = "." ] && suite="basic"

	test_name=${file/\//_} 
	test_name=$(basename -s .lox $test_name)

	{ 
		echo "# bats file_tags=tag:$suite"
		
		[[ "${unsupported[*]}" =~ "$(basename -s .lox $file)" ]] && echo "skip"

		echo "@test \"$file\" {"
		echo "  run target/debug/lox test/cases/$file"
		echo 

		line=0
		while read -r expect; do 
			echo "  [ \"\${lines[$line]}\" = \"$expect\" ]"
			let line++
		done < <(grep "expect:" cases/$file | awk -F"expect:" '{print $2}')

		echo "}"
	} > suite/$test_name.bats

done < <(find cases -type f -name "*.lox" | cut -d'/' -f2-)
